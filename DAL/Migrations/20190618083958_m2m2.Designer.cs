// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20190618083958_m2m2")]
    partial class m2m2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Models.Have", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Haves");
                });

            modelBuilder.Entity("DAL.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("DAL.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("DAL.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("DAL.Models.PersonHave", b =>
                {
                    b.Property<string>("PersonId");

                    b.Property<int>("HaveId");

                    b.HasKey("PersonId", "HaveId");

                    b.HasIndex("HaveId");

                    b.ToTable("PersonHaves");
                });

            modelBuilder.Entity("DAL.Models.PersonInterest", b =>
                {
                    b.Property<string>("PersonId");

                    b.Property<int>("InterestId");

                    b.HasKey("PersonId", "InterestId");

                    b.HasIndex("InterestId");

                    b.ToTable("PersonInterests");
                });

            modelBuilder.Entity("DAL.Models.PersonLanguage", b =>
                {
                    b.Property<string>("PersonId");

                    b.Property<int>("LanguageId");

                    b.HasKey("PersonId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("PersonLanguages");
                });

            modelBuilder.Entity("DAL.Models.PersonWant", b =>
                {
                    b.Property<string>("PersonId");

                    b.Property<int>("WantId");

                    b.HasKey("PersonId", "WantId");

                    b.HasIndex("WantId");

                    b.ToTable("PersonWants");
                });

            modelBuilder.Entity("DAL.Models.Want", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Wants");
                });

            modelBuilder.Entity("DAL.Models.PersonHave", b =>
                {
                    b.HasOne("DAL.Models.Have", "Have")
                        .WithMany("PersonHaves")
                        .HasForeignKey("HaveId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.Person", "Person")
                        .WithMany("PersonHaves")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.PersonInterest", b =>
                {
                    b.HasOne("DAL.Models.Interest", "Interest")
                        .WithMany("PersonInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.Person", "Person")
                        .WithMany("PersonInterests")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.PersonLanguage", b =>
                {
                    b.HasOne("DAL.Models.Language", "Language")
                        .WithMany("PersonLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.Person", "Person")
                        .WithMany("PersonLanguages")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.PersonWant", b =>
                {
                    b.HasOne("DAL.Models.Person", "Person")
                        .WithMany("PersonWants")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.Want", "Want")
                        .WithMany("PersonWants")
                        .HasForeignKey("WantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
